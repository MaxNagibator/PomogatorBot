// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PomogatorBot.Web.Infrastructure;
using Telegram.Bot.Types;

#nullable disable

namespace PomogatorBot.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250630141909_AddMessageEntitiesJsonColumn")]
    partial class AddMessageEntitiesJsonColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PomogatorBot.Web.Infrastructure.Entities.BroadcastHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AdminUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("admin_user_id");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("completed_at");

                    b.Property<string>("ErrorSummary")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("error_summary");

                    b.Property<int>("FailedDeliveries")
                        .HasColumnType("integer")
                        .HasColumnName("failed_deliveries");

                    b.Property<MessageEntity[]>("MessageEntities")
                        .HasColumnType("jsonb")
                        .HasColumnName("message_entities");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("character varying(4096)")
                        .HasColumnName("message_text");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("started_at");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int>("SuccessfulDeliveries")
                        .HasColumnType("integer")
                        .HasColumnName("successful_deliveries");

                    b.Property<int>("TotalRecipients")
                        .HasColumnType("integer")
                        .HasColumnName("total_recipients");

                    b.HasKey("Id")
                        .HasName("pk_broadcast_history");

                    b.ToTable("broadcast_history", (string)null);
                });

            modelBuilder.Entity("PomogatorBot.Web.Infrastructure.Entities.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserId"));

                    b.Property<string>("Alias")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("alias");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("last_name");

                    b.Property<int>("Subscriptions")
                        .HasColumnType("integer")
                        .HasColumnName("subscriptions");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
